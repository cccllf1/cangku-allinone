services:
  mongo:
    image: mongo:5
    container_name: cangku-mongo
    restart: always
    ports:
      - "8612:8612"
    command: ["mongod", "--port", "8612", "--auth"]
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin_user
      - MONGO_INITDB_ROOT_PASSWORD=your_strong_password
    volumes:
      - /volume1/docker/cccllf1/cangku-allinone/mongo-data:/data/db
    networks:
      - cangku-network
    healthcheck:
      test: ["CMD", "mongosh", "--port", "8612", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build: ./server
    container_name: cangku-backend
    restart: always
    ports:
      - "8611:8611"
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - /volume1/docker/cccllf1/cangku-allinone/server:/app
      - /volume1/docker/cccllf1/cangku-allinone/server/uploads:/app/uploads
    environment:
      - MONGODB_URI=mongodb://admin_user:your_strong_password@mongo:8612/cangku-guanli?authSource=admin
      - PORT=8611
      - NODE_ENV=production
      - JWT_SECRET=your-super-secret-jwt-key-please-change-in-production
    command: >
      bash -c "mkdir -p /app/uploads && 
      chmod -R 777 /app/uploads && 
      sleep 10 &&
      node createAdmin.js &&
      npm start"
    networks:
      - cangku-network

  frontend:
    build: ./cangku-guanli
    container_name: cangku-frontend
    restart: always
    ports:
      - "8610:80"
    depends_on:
      - backend
    networks:
      - cangku-network

networks:
  cangku-network:
    driver: bridge